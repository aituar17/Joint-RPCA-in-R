---
title: "Joint RPCA Reproducible Example"
format: html
editor: visual
---

```{r setup, message=FALSE, warning=FALSE}
options(warn = -1)
# Load user-defined functions
source("../R/dependencies.R")
source("../R/jointRPCA.R")
source("../R/jointRPCAmae.R")
source("../R/jointOptspaceHelper.R")
source("../R/jointOptspaceSolve.R")
source("../R/optspaceHelper.R")
source("../R/transformHelper.R")
source("../R/transform.R")
source("../R/maskValueOnly.R")
source("../R/rpcaTableProcessing.R")
source("../R/jointRPCAutils.R")

# Load Data and Run Joint RPCA

# Example using MAE from mia::HintikkaXOData

# Load example data
data(HintikkaXOData)

# Run joint RPCA on MultiAssayExperiment object
result <- jointRPCAmae(
  mae = HintikkaXOData,
  n.components = 2,
  train.test.column = "Set",
  rclr.transform.tables = TRUE,
  max.iterations = 5
)

# Compute and Store Sample Scores

# Compute dataset-specific sample scores
rclr.tables <- result$rclr.tables
dataset_specific_scores <- .dataset_specific_scores(rclr.tables, n.components = 2, max.iterations = 5)
str(dataset_specific_scores)

# Store dataset-specific sample scores per experiment
for (i in seq_along(dataset_specific_scores)) {
  experiment_name <- names(HintikkaXOData)[i]
  reducedDim(HintikkaXOData[[experiment_name]], "localRPCA") <- dataset_specific_scores[[i]]
}

# View dataset-specific sample scores
for (name in names(HintikkaXOData)) {
  cat("\nScores for:", name, "\n")
  print(head(reducedDim(HintikkaXOData[[name]], "localRPCA")))
}

# Store joint RPCA sample scores in taxonomic experiment
reducedDim(HintikkaXOData[["microbiota"]], "jointRPCA") <- result$ord.res$samples

# View joint RPCA sample scores
head(reducedDim(HintikkaXOData[["microbiota"]], "jointRPCA"))

# Compute and Store Feature Loadings

# Compute dataset-specific feature loadings
dataset_specific_loadings <- .dataset_specific_loadings(rclr.tables, n.components = 2, max.iterations = 5)
str(dataset_specific_loadings)

# Store dataset-specific feature loadings per experiment
for (i in seq_along(dataset_specific_loadings)) {
  experiment_name <- names(HintikkaXOData)[i]
  metadata(HintikkaXOData[[experiment_name]])$localRPCA_feature_loadings <- dataset_specific_loadings[[i]]
}

# View dataset-specific feature loadings per experiment
head(metadata(HintikkaXOData[[experiment_name]])$localRPCA_feature_loadings)

# Store joint feature loadings
metadata(HintikkaXOData[["microbiota"]])$jointRPCA_feature_loadings <- result$ord.res$features

# View joint feature loadings
head(metadata(HintikkaXOData[["microbiota"]])$jointRPCA_feature_loadings)

# Compute and Visualize Covariance Matrix of Feature Loadings

# Covariance matrix of joint feature loadings

# Extract joint feature loadings
feature_loadings <- metadata(HintikkaXOData[["microbiota"]])$jointRPCA_feature_loadings

# Subset the numeric columns (PC axes)
loadings_matrix <- as.matrix(feature_loadings[, c("PC1", "PC2")])

# Compute a feature-feature covariance matrix
pairwise_cov <- tcrossprod(loadings_matrix)

# Melt the covariance matrix to long format
cov_long <- melt(pairwise_cov)
names(cov_long) <- c("Feature1", "Feature2", "Covariance")

# Plot covariance heatmap
ggplot(cov_long, aes(x = Feature1, y = Feature2, fill = Covariance)) +
  geom_tile() +
  scale_fill_gradient2(low = "darkred", high = "darkgreen", mid = "white",
                       midpoint = 0, limit = c(min(cov_long$Covariance), max(cov_long$Covariance)),
                       name = "Covariance") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Covariance Matrix of RPCA Feature Loadings",
       x = "Feature", y = "Feature")

```
