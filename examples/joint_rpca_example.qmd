---
title: "Joint RPCA Reproducible Example"
format: html
editor: visual
---

```{r setup, message=FALSE, warning=FALSE}
options(warn = -1)
# Load user-defined functions
source("../R/dependencies.R")
source("../R/jointRPCA.R")
source("../R/jointRPCAuniversal.R")
source("../R/jointOptspaceHelper.R")
source("../R/jointOptspaceSolve.R")
source("../R/optspaceHelper.R")
source("../R/transformHelper.R")
source("../R/transform.R")
source("../R/maskValueOnly.R")
source("../R/rpcaTableProcessing.R")
source("../R/jointRPCAutils.R")

# Load Data and Run Joint RPCA

# Example using MAE from mia::HintikkaXOData

#load example data
data(HintikkaXOData)

#run joint RPCA on MultiAssayExperiment object
result <- jointRPCAuniversal(
  data = HintikkaXOData,
  n.components = 3,
  train.test.column = "Set",
  rclr.transform.tables = TRUE,
  max.iterations = 5
)

# Compute and Store Sample Scores

#compute dataset-specific sample scores
rclr.tables <- result$rclr.tables
dataset_specific_scores <- .dataset_specific_scores(rclr.tables, n.components = 3, max.iterations = 5)

#store dataset-specific sample scores per experiment
for (i in seq_along(dataset_specific_scores)) {
  experiment_name <- names(HintikkaXOData)[i]
  reducedDim(HintikkaXOData[[experiment_name]], "localRPCA") <- dataset_specific_scores[[i]]
}

#view dataset-specific sample scores
for (name in names(HintikkaXOData)) {
  cat("\nSample Scores for:", name, "\n")
  print(head(reducedDim(HintikkaXOData[[name]], "localRPCA")))
}

#store joint RPCA sample scores in taxonomic experiment
reducedDim(HintikkaXOData[["microbiota"]], "jointRPCA") <- result$ord.res$samples

#view joint RPCA sample scores
head(reducedDim(HintikkaXOData[["microbiota"]], "jointRPCA"))

# Compute and Store Feature Loadings

#compute dataset-specific feature loadings
dataset_specific_loadings <- .dataset_specific_loadings(rclr.tables, n.components = 3, max.iterations = 5)

#store dataset-specific feature loadings per experiment
for (i in seq_along(dataset_specific_loadings)) {
  experiment_name <- names(HintikkaXOData)[i]
  metadata(HintikkaXOData[[experiment_name]])$localRPCA_feature_loadings <- dataset_specific_loadings[[i]]
}

#view dataset-specific feature loadings per experiment
for (name in names(HintikkaXOData)) {
  cat("\nFeature Loadings for:", name, "\n")
  print(head(metadata(HintikkaXOData[[name]])$localRPCA_feature_loadings))
}

#store joint feature loadings
metadata(HintikkaXOData[["microbiota"]])$jointRPCA_feature_loadings <- result$ord.res$features

#view joint feature loadings
head(metadata(HintikkaXOData[["microbiota"]])$jointRPCA_feature_loadings)

# Benchmarking

# --- Find a viable label column automatically among common_samples ---
cd <- as.data.frame(colData(HintikkaXOData)[common_samples, , drop = FALSE])

is_categorical <- function(x) is.factor(x) || is.character(x)
cats <- names(cd)[vapply(cd, is_categorical, logical(1))]

viable <- list()
for (nm in cats) {
  x <- as.factor(cd[[nm]])
  x <- droplevels(x)
  x <- x[!is.na(x)]
  if (nlevels(x) >= 2) {
    ct <- table(x)
    if (min(ct) >= 2) viable[[nm]] <- ct
  }
}

if (length(viable) == 0L) {
  stop("No categorical column in colData has ≥2 classes with ≥2 samples each among common_samples.")
}

# pick the "best" (most balanced) label by largest min class size, then largest total
score <- vapply(viable, function(ct) c(min = min(ct), total = sum(ct)), numeric(2))
best_idx <- order(score["min", ], score["total", ], decreasing = TRUE)[1]
target_label <- names(viable)[best_idx]
message("Using label column: ", target_label)

labels0 <- as.factor(cd[[target_label]])

```
